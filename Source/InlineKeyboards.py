from dublib.TelebotUtils.Users import UserData
from telebot import types

class InlineKeyboards:

	def __init__(self):
		pass

	def SelectionGender(self) -> types.InlineKeyboardMarkup:
		# –ö–Ω–æ–ø–æ—á–Ω–æ–µ –º–µ–Ω—é.
		Menu = types.InlineKeyboardMarkup()

		# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–Ω–æ–ø–æ–∫.
		Women = types.InlineKeyboardButton("‚ôÄÔ∏è –ñ–µ–Ω—â–∏–Ω–∞", callback_data = f"Women")
		Men = types.InlineKeyboardButton("Ô∏è‚ôÇÔ∏è –ú—É–∂—á–∏–Ω–∞", callback_data = f"Men")
		
		# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –≤ –º–µ–Ω—é.
		Menu.add(Women, Men, row_width= 1) 

		return Menu

	def RepeatGender(self) -> types.InlineKeyboardMarkup:
		# –ö–Ω–æ–ø–æ—á–Ω–æ–µ –º–µ–Ω—é.
		Menu = types.InlineKeyboardMarkup()

		# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–Ω–æ–ø–æ–∫.
		RepeatWomen = types.InlineKeyboardButton("‚ôÄÔ∏è –í—Å—ë —Ç–∞ –∂–µ –¥–µ–≤—É—à–∫–∞", callback_data = f"Women")
		RepeatMen = types.InlineKeyboardButton("Ô∏è‚ôÇÔ∏è –ù–µ-–Ω–µ, —è –º—É–∂–∏–∫", callback_data = f"Men")
		
		# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –≤ –º–µ–Ω—é.
		Menu.add(RepeatWomen, RepeatMen, row_width= 1) 

		return Menu
		
	
	def Dose(self) -> types.InlineKeyboardMarkup:
		# –ö–Ω–æ–ø–æ—á–Ω–æ–µ –º–µ–Ω—é.
		Menu = types.InlineKeyboardMarkup()

		# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–Ω–æ–ø–æ–∫.
		Dose = types.InlineKeyboardButton("–î–æ–∑–∞", callback_data = f"Dose")
		
		# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –≤ –º–µ–Ω—é.
		Menu.add(Dose, row_width= 1) 

		return Menu
	
	def AddShare(self) -> types.InlineKeyboardMarkup:
		Menu = types.InlineKeyboardMarkup()

		Share = types.InlineKeyboardButton(
			"–ü–æ–¥–µ–ª–∏—Ç—å—Å—è", 
			switch_inline_query='\n\n–ë–æ—Ç –≤–∑–∞–∏–º–Ω–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –∏ –ø–æ–≤—ã—à–µ–Ω–∏—è —Å–∞–º–æ–æ—Ü–µ–Ω–∫–∏! üòé'
			)
		
		Menu.add(Share)

		return Menu
	
	def SettingsMenu(self) -> types.InlineKeyboardMarkup:
		# –ö–Ω–æ–ø–æ—á–Ω–æ–µ –º–µ–Ω—é.
		Menu = types.InlineKeyboardMarkup()

		# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–Ω–æ–ø–æ–∫.
		SettingsDaily = types.InlineKeyboardButton("‚ùéÔ∏è –í–∫–ª/–≤—ã–∫–ª –ø–æ—Å–ª–∞–Ω–∏—è", callback_data = f"Settings_daily")
		–°hange = types.InlineKeyboardButton("üîÑ –°–º–µ–Ω–∏—Ç—å –∏–º—è", callback_data = f"Change")
		Info = types.InlineKeyboardButton("üîÜ –ò–Ω—Ñ–∞", callback_data = f"Info")
		Return = types.InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data = f"Return")
		# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –≤ –º–µ–Ω—é.
		Menu.add(SettingsDaily, –°hange, Info, Return, row_width= 1) 

		return Menu

	def SettingsDaily(self) -> types.InlineKeyboardMarkup:
		# –ö–Ω–æ–ø–æ—á–Ω–æ–µ –º–µ–Ω—é.
		Menu = types.InlineKeyboardMarkup()

		# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–Ω–æ–ø–æ–∫.
		Deactivate = types.InlineKeyboardButton("‚ùåÔ∏è –û—Ç–∫–ª—é—á–∏—Ç—å –ø–æ—Å–ª–∞–Ω–∏—è", callback_data = f"Deactivate")
		Activate = types.InlineKeyboardButton("‚úÖÔ∏è –í–∫–ª—é—á–∏—Ç—å –ø–æ—Å–ª–∞–Ω–∏—è", callback_data = f"Activate")
		# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –≤ –º–µ–Ω—é.
		Menu.add(Deactivate, Activate, row_width= 1) 

		return Menu

	def Sorry(self) -> types.InlineKeyboardMarkup:
		# –ö–Ω–æ–ø–æ—á–Ω–æ–µ –º–µ–Ω—é.
		Menu = types.InlineKeyboardMarkup()

		# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–Ω–æ–ø–æ–∫.
		Sorry = types.InlineKeyboardButton("–ü—Ä–æ—Å—Ç–∏! –ù–æ —Ç–∞–∫ –±—É–¥–µ—Ç –ª—É—á—à–µ...", callback_data = f"Sorry")
		# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –≤ –º–µ–Ω—é.
		Menu.add(Sorry, row_width= 1) 

		return Menu
	
	def Good(self) -> types.InlineKeyboardMarkup:
		# –ö–Ω–æ–ø–æ—á–Ω–æ–µ –º–µ–Ω—é.
		Menu = types.InlineKeyboardMarkup()

		# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–Ω–æ–ø–æ–∫.
		Good = types.InlineKeyboardButton("–í–∑–∞–∏–º–Ω–æ! –Ø —Ç–æ–∂–µ!)", callback_data = f"Good")
		# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –≤ –º–µ–Ω—é.
		Menu.add(Good, row_width= 1) 

		return Menu

	
	def WriteFor(self) -> types.InlineKeyboardMarkup:
		# –ö–Ω–æ–ø–æ—á–Ω–æ–µ –º–µ–Ω—é.
		Menu = types.InlineKeyboardMarkup()

		# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–Ω–æ–ø–æ–∫.
		GirlFriend = types.InlineKeyboardButton("üçë –î–ª—è –¥–µ–≤—É—à–µ–∫", callback_data = f"GirlFriend")
		BoyFriend = types.InlineKeyboardButton("üí™ –î–ª—è –ø–∞—Ä–Ω–µ–π", callback_data = f"BoyFriend")

		# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –≤ –º–µ–Ω—é.
		Menu.add(GirlFriend, BoyFriend, row_width= 1) 

		return Menu
	
	def WriteTo(self) -> types.InlineKeyboardMarkup:
		# –ö–Ω–æ–ø–æ—á–Ω–æ–µ –º–µ–Ω—é.
		Menu = types.InlineKeyboardMarkup()

		# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–Ω–æ–ø–æ–∫.
		Random = types.InlineKeyboardButton("üìÜ –î–ª—è –µ–∂–µ–¥–Ω–µ–≤–Ω—ã—Ö –ø–æ—Å–ª–∞–Ω–∏–π", callback_data = f"Random")
		Dosa = types.InlineKeyboardButton("üíâ –î–ª—è –∫–Ω–æ–ø–∫–∏ –î–æ–∑–∞", callback_data = f"Dosa")

		# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –≤ –º–µ–Ω—é.
		Menu.add(Random, Dosa, row_width= 1) 

		return Menu
	
	def CheckLetter(self) -> types.InlineKeyboardMarkup:
		# –ö–Ω–æ–ø–æ—á–Ω–æ–µ –º–µ–Ω—é.
		Menu = types.InlineKeyboardMarkup()

		# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–Ω–æ–ø–æ–∫.
		Send = types.InlineKeyboardButton("üü¢ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", callback_data = f"Send")
		Edit = types.InlineKeyboardButton("üî¥ –ü–µ—Ä–µ–¥–µ–ª–∞—Ç—å", callback_data = f"Edit")
		# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –≤ –º–µ–Ω—é.
		Menu.add(Send, Edit, row_width= 1) 

		return Menu
	
	def CheckModeration(self, Sentence, ID_Sentence,gender) -> types.InlineKeyboardMarkup:
		# –ö–Ω–æ–ø–æ—á–Ω–æ–µ –º–µ–Ω—é.
		Menu = types.InlineKeyboardMarkup()

		# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–Ω–æ–ø–æ–∫.
		Approve = types.InlineKeyboardButton("üü¢ –û–¥–æ–±—Ä–∏—Ç—å", callback_data = f"Approve_sentence_{Sentence}_{ID_Sentence}_{gender}")
		Delete = types.InlineKeyboardButton("üî¥ –£–¥–∞–ª–∏—Ç—å", callback_data = f"Delete_sentence_{Sentence}_{ID_Sentence}_{gender}")
		# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –≤ –º–µ–Ω—é.
		Menu.add(Approve, Delete, row_width= 1) 

		return Menu
	

